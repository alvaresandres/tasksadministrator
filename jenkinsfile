pipeline{
    agent any

    environment{
        PATH_ARTIFACTS = '"C:\\Artifacts\\"'
        MODULES_EXISTS = 'true'
        SERVER_PATH    = '"E:\\serverfirebase\\public"'
        BUILD_PATH     = '"C:\\Program Files (x86)\\Jenkins\\workspace\\taskAdministrator\\build"'
        FIREBASE       = '"C:\\Users\\alvar\\AppData\\Roaming\\npm\\firebase"'
    }
stages{

    stage('Verify-dependencies'){
        steps{
            script{
                def objectFound = fileExists("${WORKSPACE}\\node_modules")

                if(objectFound){
                    print "Directory was found."
                    MODULES_EXISTS = 'false'
                    cleanWs deleteDirs: true, patterns: [[pattern: '**/node_modules/**', type: 'EXCLUDE']]
                }
                print "modulo :${MODULES_EXISTS}"
                print "validated"
            }
        }
    }  

    stage('Cloning'){
        steps{
            print 'cloning repository...'
            bat 'rmdir /s /q "E:\\rep"'
            bat 'mkdir "E:\\rep"'
            bat 'git clone -b main https://github.com/alvaresandres/tasksadministrator.git "E:\\rep"'
            bat 'xcopy "E:\\rep" "'+WORKSPACE+'" /s /y'
        }
    }
 
    stage('Copy-dependencies'){
        when {
            expression { MODULES_EXISTS == 'true' }
        }
        steps{
            bat 'xcopy '+env.PATH_ARTIFACTS+' "'+env.WORKSPACE+'" /s /q /y'
        }
    }

    stage('build'){
        steps{
            print 'building...'
            bat 'npm run build' 
        }
    }
    
    stage('deploy'){
        steps{
            bat "xcopy ${BUILD_PATH} ${SERVER_PATH} /s /y"
            bat '''cd\\
            E:
            cd E:\\serverfirebase
            call %FIREBASE% deploy --token %FIREBASE_TOKEN%
            '''
        }
    }
  }

}